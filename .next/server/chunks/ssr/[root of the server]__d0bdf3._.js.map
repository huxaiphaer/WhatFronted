{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/admin/Documents/workspace/what_fe/src/store/slices/productSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Product } from '@/types/product';\n\ninterface ProductState {\n  products: Product[];\n  searchTerm: string;\n  userEmail: string | null;\n}\n\nconst initialState: ProductState = {\n  products: [],\n  searchTerm: '',\n  userEmail: null,\n};\n\nconst productSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    setProducts: (state, action: PayloadAction<Product[]>) => {\n      state.products = action.payload;\n    },\n    setSearchTerm: (state, action: PayloadAction<string>) => {\n      state.searchTerm = action.payload;\n    },\n    setUserEmail: (state, action: PayloadAction<string | null>) => {\n      state.userEmail = action.payload;\n    },\n    selectProduct: (state, action: PayloadAction<number>) => {\n      const product = state.products.find(p => p.id === action.payload);\n      if (product) {\n        product.selected = true;\n      }\n    },\n  },\n});\n\nexport const { setProducts, setSearchTerm, setUserEmail, selectProduct } = productSlice.actions;\nexport default productSlice.reducer;\n"],"names":[],"mappings":";;;;;;;AAAA;;AASA,MAAM,eAA6B;IACjC,UAAU,EAAE;IACZ,YAAY;IACZ,WAAW;AACb;AAEA,MAAM,eAAe,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC/B,MAAM;IACN;IACA,UAAU;QACR,aAAa,CAAC,OAAO;YACnB,MAAM,QAAQ,GAAG,OAAO,OAAO;QACjC;QACA,eAAe,CAAC,OAAO;YACrB,MAAM,UAAU,GAAG,OAAO,OAAO;QACnC;QACA,cAAc,CAAC,OAAO;YACpB,MAAM,SAAS,GAAG,OAAO,OAAO;QAClC;QACA,eAAe,CAAC,OAAO;YACrB,MAAM,UAAU,MAAM,QAAQ,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,OAAO,OAAO;YAChE,IAAI,SAAS;gBACX,QAAQ,QAAQ,GAAG;YACrB;QACF;IACF;AACF;AAEO,MAAM,EAAE,WAAW,EAAE,aAAa,EAAE,YAAY,EAAE,aAAa,EAAE,GAAG,aAAa,OAAO;uCAChF,aAAa,OAAO"}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///Users/admin/Documents/workspace/what_fe/src/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport productReducer from './slices/productSlice';\n\nexport const store = configureStore({\n  reducer: {\n    products: productReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"],"names":[],"mappings":";;;AACA;AADA;;;AAGO,MAAM,QAAQ,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,UAAU,sIAAA,CAAA,UAAc;IAC1B;AACF"}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/admin/Documents/workspace/what_fe/src/providers/redux-provider.tsx"],"sourcesContent":["'use client';\n\nimport { Provider } from 'react-redux';\nimport { store } from '@/store';\n\nexport function ReduxProvider({ children }: { children: React.ReactNode }) {\n  return <Provider store={store}>{children}</Provider>;\n}"],"names":[],"mappings":";;;;AAGA;AADA;AAFA;;;;AAKO,SAAS,cAAc,EAAE,QAAQ,EAAiC;IACvE,qBAAO,8OAAC,yJAAA,CAAA,WAAQ;QAAC,OAAO,qHAAA,CAAA,QAAK;kBAAG;;;;;;AAClC"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}